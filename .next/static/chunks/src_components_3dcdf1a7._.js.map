{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Navigation.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport Link from 'next/link'\n\nexport default function Navigation() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const [language, setLanguage] = useState('EN')\n\n  const toggleLanguage = () => {\n    setLanguage(prev => prev === 'EN' ? 'AR' : 'EN')\n  }\n\n  const navLinks = [\n    { href: '/', label: 'Home' },\n    { href: '/projects', label: 'Projects' },\n    { href: '/map', label: 'Map' },\n    { href: '/investment', label: 'Investment' },\n    { href: '/blog', label: 'Blog' },\n    { href: '/booking', label: 'Contact' },\n  ]\n\n  return (\n    <nav className=\"fixed top-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-sm shadow-sm\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white font-bold text-sm\">MR</span>\n            </div>\n            <span className=\"font-bold text-xl text-gray-900\">Modern Real Estate</span>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navLinks.map((link) => (\n              <Link\n                key={link.href}\n                href={link.href}\n                className=\"text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200\"\n              >\n                {link.label}\n              </Link>\n            ))}\n            \n            {/* Language Toggle */}\n            <button\n              onClick={toggleLanguage}\n              className=\"px-3 py-1 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors duration-200\"\n            >\n              {language}\n            </button>\n          </div>\n\n          {/* Mobile Menu Button */}\n          <div className=\"md:hidden\">\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"text-gray-700 hover:text-blue-600 focus:outline-none\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                {isMenuOpen ? (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                ) : (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMenuOpen && (\n          <div className=\"md:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1 bg-white border-t border-gray-200\">\n              {navLinks.map((link) => (\n                <Link\n                  key={link.href}\n                  href={link.href}\n                  className=\"block px-3 py-2 text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200\"\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  {link.label}\n                </Link>\n              ))}\n              <button\n                onClick={toggleLanguage}\n                className=\"block w-full text-left px-3 py-2 text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200\"\n              >\n                Language: {language}\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,iBAAiB;QACrB,YAAY,CAAA,OAAQ,SAAS,OAAO,OAAO;IAC7C;IAEA,MAAM,WAAW;QACf;YAAE,MAAM;YAAK,OAAO;QAAO;QAC3B;YAAE,MAAM;YAAa,OAAO;QAAW;QACvC;YAAE,MAAM;YAAQ,OAAO;QAAM;QAC7B;YAAE,MAAM;YAAe,OAAO;QAAa;QAC3C;YAAE,MAAM;YAAS,OAAO;QAAO;QAC/B;YAAE,MAAM;YAAY,OAAO;QAAU;KACtC;IAED,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;;8CACvB,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAK,WAAU;kDAA+B;;;;;;;;;;;8CAEjD,6LAAC;oCAAK,WAAU;8CAAkC;;;;;;;;;;;;sCAIpD,6LAAC;4BAAI,WAAU;;gCACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC,+JAAA,CAAA,UAAI;wCAEH,MAAM,KAAK,IAAI;wCACf,WAAU;kDAET,KAAK,KAAK;uCAJN,KAAK,IAAI;;;;;8CASlB,6LAAC;oCACC,SAAS;oCACT,WAAU;8CAET;;;;;;;;;;;;sCAKL,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCACC,SAAS,IAAM,cAAc,CAAC;gCAC9B,WAAU;0CAEV,cAAA,6LAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CAChE,2BACC,6LAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;6DAErE,6LAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAQ9E,4BACC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;4BACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC,+JAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAU;oCACV,SAAS,IAAM,cAAc;8CAE5B,KAAK,KAAK;mCALN,KAAK,IAAI;;;;;0CAQlB,6LAAC;gCACC,SAAS;gCACT,WAAU;;oCACX;oCACY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ3B;GA7FwB;KAAA","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/AIChatbot.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\n\ninterface Message {\n  id: number\n  sender: 'user' | 'bot'\n  text: string\n  timestamp: Date\n}\n\nexport default function AIChatbot() {\n  const [isOpen, setIsOpen] = useState(false)\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: 1,\n      sender: 'bot',\n      text: 'Hello! I\\'m your real estate assistant. How can I help you find the perfect property today?',\n      timestamp: new Date()\n    }\n  ])\n  const [input, setInput] = useState('')\n  const [isTyping, setIsTyping] = useState(false)\n\n  const getRuleBasedResponse = (userMessage: string): string => {\n    const message = userMessage.toLowerCase()\n    \n    if (message.includes('villa') || message.includes('house')) {\n      return 'I found several beautiful villas for you! We have luxury villas starting from $1.2M in premium locations. Would you like to see properties in a specific area?'\n    }\n    \n    if (message.includes('apartment') || message.includes('flat')) {\n      return 'Great choice! Our apartment collection includes modern units from $300K to $2M. Are you looking for a specific number of bedrooms?'\n    }\n    \n    if (message.includes('commercial') || message.includes('office')) {\n      return 'We have excellent commercial properties available! From office spaces to retail locations. What type of commercial property interests you?'\n    }\n    \n    if (message.includes('investment') || message.includes('roi')) {\n      return 'Our investment properties offer excellent ROI potential! Average returns range from 8-15% annually. Would you like to see our investment calculator?'\n    }\n    \n    if (message.includes('price') || message.includes('budget')) {\n      return 'I can help you find properties within your budget! What\\'s your price range? We have options from $200K to $50M+'\n    }\n    \n    if (message.includes('location') || message.includes('area')) {\n      return 'Location is key! We have properties in premium areas including downtown, beachfront, and suburban locations. Which area interests you most?'\n    }\n    \n    if (message.includes('booking') || message.includes('visit') || message.includes('appointment')) {\n      return 'I\\'d be happy to help you schedule a property visit! You can book directly through our booking page or I can connect you with one of our agents.'\n    }\n    \n    return 'Thank you for your question! I can help you with property searches, pricing information, location details, and booking visits. What specific information are you looking for?'\n  }\n\n  const sendMessage = async () => {\n    if (!input.trim()) return\n\n    const userMessage: Message = {\n      id: messages.length + 1,\n      sender: 'user',\n      text: input,\n      timestamp: new Date()\n    }\n\n    setMessages(prev => [...prev, userMessage])\n    setInput('')\n    setIsTyping(true)\n\n    // Simulate typing delay\n    setTimeout(() => {\n      const botResponse: Message = {\n        id: messages.length + 2,\n        sender: 'bot',\n        text: getRuleBasedResponse(input),\n        timestamp: new Date()\n      }\n      \n      setMessages(prev => [...prev, botResponse])\n      setIsTyping(false)\n    }, 1000)\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      sendMessage()\n    }\n  }\n\n  return (\n    <>\n      {/* Chat Toggle Button */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className={`fixed bottom-6 right-6 z-50 w-14 h-14 rounded-full shadow-lg transition-all duration-300 ${\n          isOpen ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-600 hover:bg-blue-700'\n        } text-white flex items-center justify-center`}\n      >\n        {isOpen ? (\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        ) : (\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n          </svg>\n        )}\n      </button>\n\n      {/* Chat Window */}\n      {isOpen && (\n        <div className=\"fixed bottom-24 right-6 z-40 w-80 h-96 bg-white rounded-lg shadow-2xl border border-gray-200 flex flex-col\">\n          {/* Header */}\n          <div className=\"bg-blue-600 text-white p-4 rounded-t-lg\">\n            <h3 className=\"font-semibold\">Real Estate Assistant</h3>\n            <p className=\"text-sm text-blue-100\">Ask me about properties!</p>\n          </div>\n\n          {/* Messages */}\n          <div className=\"flex-1 overflow-y-auto p-4 space-y-3\">\n            {messages.map((message) => (\n              <div\n                key={message.id}\n                className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n              >\n                <div\n                  className={`max-w-xs px-3 py-2 rounded-lg text-sm ${\n                    message.sender === 'user'\n                      ? 'bg-blue-600 text-white'\n                      : 'bg-gray-100 text-gray-800'\n                  }`}\n                >\n                  {message.text}\n                </div>\n              </div>\n            ))}\n            \n            {isTyping && (\n              <div className=\"flex justify-start\">\n                <div className=\"bg-gray-100 text-gray-800 px-3 py-2 rounded-lg text-sm\">\n                  <div className=\"flex space-x-1\">\n                    <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                    <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                    <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Input */}\n          <div className=\"p-4 border-t border-gray-200\">\n            <div className=\"flex space-x-2\">\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Ask about properties...\"\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\"\n              />\n              <button\n                onClick={sendMessage}\n                disabled={!input.trim()}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}